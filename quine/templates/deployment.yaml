apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels: 
    app: {{ .Values.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /api/v1/admin/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/v1/admin/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 3
          command: ["java","-XX:+AlwaysPreTouch","-XX:+UseParallelGC","-XX:InitialRAMPercentage=40.0","-XX:MaxRAMPercentage=80.0","-Dconfig.file=/config/quine.conf","-jar","/quine-1.1.2.jar"]
          volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
      volumes:
      - name: config
        configMap: 
          name: quine-config
          items:
          - key: "quine.conf"
            path: "quine.conf"
